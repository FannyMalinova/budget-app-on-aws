name: Syntax check and unit tests on push

on:
  push:
    branches-ignore:
      - main
  workflow_call:

jobs:
  editorconfig:
    name: EditorConfig checker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Use EditorConfig Checker
        uses: editorconfig-checker/action-editorconfig-checker@main

      - name: Run EditorConfig Checker 
        run: editorconfig-checker

  markdownlintcli:
    name: Markdownlint CLI
    runs-on: ubuntu-latest
    steps:
      - name: Install Markdownlint CLI
        run: npm install -g markdownlint-cli
      
      - name: Run Markdownlint  
        run: markdownlint **/*.md

  python-black:
    name: Run Python Black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check files using the black formatter
        uses: datadog/action-py-black-formatter@v2.5
        id: action_black

  python-lint:
    name: Python Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Run flake8
        uses: julianwachholz/flake8-action@v2.0.2
        with:
          checkName: "Python Lint"
          path: src
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  unittest:
    name: Run Python unit tests
    runs-on: ubuntu-latest
    needs: [editorconfig,markdownlintcli, python-black, python-lint]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with: 
          python-version: "3.13"

      - name: Run tests
        uses: BSFishy/pip-action@v1
        with:
          requirements: src/requirements.txt

  terraform-fmt:
    name: Check Terraform file are formatted correctly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: terraform fmt
        uses: dflook/terraform-fmt@v1.46.0
        with:
          path: terraform

      - name: terraform validate
        uses: dflook/terraform-validate@v1.9.3
        id: validate
        with:
          path: terraform

      - name: Validate failed
        if: ${{ failure() && steps.validate.outputs.failure-reason == 'validate-failed' }}
        run: echo "terraform validate failed"



