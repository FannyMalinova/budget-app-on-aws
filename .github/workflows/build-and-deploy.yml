name: Build and Deploy

on:
  push:
    branches:
      - main
      - release

permissions:
  id-token: write
  contents: read 

jobs:
  #pr-checks:
    #name: PR Checks
    #uses: ./.github/workflows/PR-checks.yml
    #secrets: inherit

  build-and-push:
    name: Build and Push Image
    runs-on: ubuntu-latest
    #outputs:
      #image-name: ${{ steps.build-image.outputs.image-name }}
    #needs: [pr-checks]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Log in to AWS
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Build and push Docker image
        id: build-image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ vars.ECR_REPO }}:${{ GITHUB.SHA }}

      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with: 
          image-ref: ${{ vars.ECR_REPO }}:${{ GITHUB.SHA }}
          format: "table"
          ignore-unfixed: true
          vuln-type: "os,library"

      - name: Push the image to ECR
        run: docker push ${{ vars.ECR_REPO }}:${{ GITHUB.SHA }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set vars
        run: |
          if [[ $GITHUB_REF == 'refs/head/release' ]]; then
            echo "release" > .workspace
          else
            echo "staging" > .workspace
          fi

      - name: Terraform apply
        env:
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
        run: |
          export TF_VAR_ecr_image=${{ vars.ECR_REPO }}:${{ GITHUB.SHA }}
          workspace=$(cat .workspace)
          cd terraform/
          docker compose -f docker-compose-terraform-setup.yml run --rm terraform -chdir=deploy/ init
          docker compose -f docker-compose-terraform-setup.yml run --rm terraform -chdir=deploy/ workspace select -or-create $workspace
          docker compose -f docker-compose-terraform-setup.yml run --rm terraform -chdir=deploy/ apply -auto-approve
